<link rel="stylesheet" href="https://unpkg.com/swiper@7/swiper-bundle.min.css"/>
<script src="https://unpkg.com/swiper@7/swiper-bundle.min.js"></script>
<style>
    .swiper-button-prev, .swiper-button-next { color: black; bottom: 25px !important;top: auto !important; height: 20px; }
    .swiper-button-prev::after, .swiper-button-next::after { font-size: 20px; }
    .swiper-pagination { color: black; bottom: 25px !important; }
    .swiper-pagination-bullet-active { background: black !important; }
    .product--information { height: fit-content; }
</style>
{{ 'jquery.min.js' | asset_url | script_tag }}

<div class="max-w-6xl mx-auto my-8">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
        <div class="product--medias">
          <div class="swiper h-full">
            <div class="swiper-wrapper">
                {% for media in product.media %}
                    <div class="swiper-slide">
                        <div id=" magnify_pic" class="h-full overflow-hidden p-2">
                            {% render 'product-media', media: media %}
                        </div>
                    </div>
                {% endfor %}
            </div>
            <div class="swiper-pagination"></div>
            <div class="swiper-button-prev"></div>
            <div class="swiper-button-next"></div>
        </div>
            <div class="md:hidden">
                <div class="swiper h-94">
                    <div class="swiper-wrapper">
                        {% for media in product.media %}
                            <div class="swiper-slide">
                                <div class="h-80 overflow-hidden p-2">
                                    {% render 'product-media', media: media %}
                                </div>
                            </div>
                        {% endfor %}
                    </div>
                    <div class="swiper-pagination"></div>
                    <div class="swiper-button-prev"></div>
                    <div class="swiper-button-next"></div>
                </div>
            </div>
        </div>
<!-- 
        <div class="product--information"></div> -->
        <div class="product--information sticky top-5 p-2">
            {% form 'product', product %}
                <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                <div class="my-3">
                    <span class="text-xs text-gray-500">{{ product.vendor }}</span>
                </div>

                <div class="my-3">
                    <h1 class="text-3xl text-gray-900 font-bold">{{ product.title }}</h1>
                </div>
                <div class="my-3 flex">
                    <a href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;src=sdkpreparse" class="text-gray-500">
                        <svg fill="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-5 h-5" viewBox="0 0 24 24">
                          <path d="M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z"></path>
                        </svg>
                      </a>
                      <a class="text-gray-500">
                        <svg fill="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-5 h-5" viewBox="0 0 24 24">
                          <path d="M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z"></path>
                        </svg>
                      </a>
                      <a class="text-gray-500">
                        <svg fill="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-5 h-5" viewBox="0 0 24 24">
                          <path d="M21 11.5a8.38 8.38 0 01-.9 3.8 8.5 8.5 0 01-7.6 4.7 8.38 8.38 0 01-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 01-.9-3.8 8.5 8.5 0 014.7-7.6 8.38 8.38 0 013.8-.9h.5a8.48 8.48 0 018 8v.5z"></path>
                        </svg>
                      </a>

                </div>

                <div class="my-3 flex items-center ">
                    {% assign product_price = product.selected_or_first_available_variant %}
                    <span class="text-2xl mr-2 text-gray-500 line-through">{{ product_price.compare_at_price | money }}</span>
                    <span class="text-2xl mr-2  text-gray-900 font-bold">{{ product_price.price | money }}</span>

                    {% if product_price.price < product_price.compare_at_price %}
                        <span class="px-5 py-1 mx-2 text-sm font-bold bg-indigo-500 rounded text-white ">Sale</span>
                    {% endif %}
                </div>

                <div class="my-3">
                    {% unless product.has_only_default_variant %}
                        <div data-url="{{ product.url}}" data-section="{{ section.id }}">
                            {% for option in product.options_with_values %}
                                <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>

                                <div class="my-2">
                                    <select 
                                        name="options[{{ option.name | escape }}]" 
                                        id="Option-{{ section.id }}-{{ forloop.index0 }}" 
                                        class="w-full border py-3 px-3"
                                    >
                                        {% for value in option.values %}
                                            <option 
                                                value="{{ value | escape }}"
                                                {% if option.selected_value == value %}
                                                    selected="selected"
                                                {% endif %}
                                            >
                                                {{ value }}
                                            </option>
                                        {% endfor %}
                                    </select>
                                </div>
                            {% endfor %}
                        </div>
                    {% endunless %}
                </div>

                <div class="my-3">
                    <label for="Quantity-{{ section.id }}">Quantity</label>

                    <div class="my-2">
                        <input type="number" name="quantity" id="Quantity-{{ section.id }}" value="1" min="1" class="w-full border px-3 py-3">
                    </div>
                </div>

                <div class="my-3">
                    <p class="text-gray-700">{{ product.description }}</p>
                </div>

                <div class="my-3">
                    <button type="submit" name="add" class="w-2/4 px-6 py-4 bg-rose-600 text-white hover:bg-rose-700 rounded-sm my-2"
                        {% if product.selected_or_first_available_variant == false %}
                            disabled
                        {% endif %}
                    >
                        {% if product.selected_or_first_available_variant.available == false %}
                            Sold out
                        {% else %}
                            Add to cart
                        {% endif %}
                    </button>
                </div>
            {% endform %}
        </div>
    </div>
</div>
{{ 'imagezoom.js' | asset_url | script_tag }}

<script>
    const swiper = new Swiper('.swiper', {
        direction: 'horizontal',
        pagination: {
            el: '.swiper-pagination'
        },
        navigation: {
            prevEl: '.swiper-button-prev',
            nextEl: '.swiper-button-next'
        }
    })

    class VariantSelector extends HTMLElement {
        constructor() {
            super();
            this.addEventListener("change", this.onVariantChange);
        }
        onVariantChange() {
            this.getSelectedOptions();
            this.getSelectedVariant();
            if(this.currentVariant) {
                this.updateURL();
                this.updateFormID();
                this.updatePrice();
            }
        }
        getSelectedOptions() {
            this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);
            console.log(this.options);
        }
        getVariantJSON() {
            this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
            return this.variantData;
        }
        getSelectedVariant() {
            this.currentVariant = this.getVariantJSON().find(
                (variant) => {
                    const findings = !variant.options.map(
                        (option, index) => {
                            return this.options[index] === option;
                        }
                    ).includes(false);
                    if(findings) return variant;
                }
            );
            console.log(this.currentVariant);
        }
        updateURL() {
            if(!this.currentVariant) return;
            window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
        }
        updateFormID() {
            const form_input = document.querySelector("#product-form").querySelector('input[name="id"]');
            form_input.value = this.currentVariant.id;
        }
        updatePrice() {
            fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
            .then((response) => response.text())
            .then((responseText) => {
                const id = `price-${this.dataset.section}`;
                const html = new DOMParser().parseFromString(responseText, 'text/html');
                const oldPrice = document.getElementById(id);
                const newPrice = html.getElementById(id);
                if(oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
            });
        }
    }
    customElements.define("variant-selector", VariantSelector);

</script>